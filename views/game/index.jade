extends ../layout

block content
    div.row.mb-3(style="min-height: 95px")
        div.col-sm-5.text-white.font-weight-bold.text-right
            span.name #{game.user1().name}
            if game.user1().avatar
                img.avatar(src=game.user1().avatar height="100px")
        div.col-sm-2.text-center.text-white
            h2 vs
            h1#timer
            h1
                span#score1
                span#score-delimeter
                span#score2
        div.col-sm-5.text-white.font-weight-bold.text-left#user2-item
            if game.userId2
              include user2-item
            if canInvite
              a(href="#" onclick="inviteGame(event)") играть
    div.row
      div.col-sm-3
      div.col-sm-6
        div.row
          div.col-sm-12
            div.scene(style="border: 1px white solid")
      div.col-sm-3
    script(type='text/javascript').
      var gameId = "#{game.id}";
      var isStarted = false;
      var isInited = false;

      var sceneWidth = parseInt("#{config.width}");
      var sceneHeight = parseInt("#{config.height}");
      var sceneBoardWidth = parseInt("#{config.board.width}");
      var sceneBoardHeight = parseInt("#{config.board.height}");

      // Попроситься в игру
      function inviteGame(event) {
          event.preventDefault();

          // Просимся в игру
          global.emit('game.invite', gameId, function (isInvited) {
              if (!isInvited) {
                  alert('Ошибка при начале игры');
                  return;
              }
          });
      }

      // Начало обратного отсчета
      global.on('game.countdown', function (response) {
          if (response.id != gameId) {
              return;
          }

          startTimer(response.seconds);
      });

      global.on('game.change', function (response) {
          if (response.id != gameId) {
              return;
          }

          if (response.status == 'user_error') {
              alert('Игрок вышел');
          }

          $("#user2-item").html(response.item);
      });

      global.on('game.start', function (startedGameId) {
          if (startedGameId != gameId) {
              return;
          }

          isStarted = true;

          $("#score-delimeter").text(':');
          $("#score1").text('0');
          $("#score2").text('0');
      });

      global.on('t', function (state) {
          if (!isInited) {
              return;
          }

          if (state.id != gameId) {
              return;
          }

          scene.update(state);
      });

      // Изменение очков
      global.on('s', function (score) {
          $("#score1").text(score['1']);
          $("#score2").text(score['2']);
      });

      // Кто-то победил
      //global.on('e', function () {

      //});

      function startTimer(start, callback) {
          setTime(start);

          var intervalId = setInterval(function () {
              start--;

              setTime(start);

              if (start == 0) {
                  clearInterval(intervalId);
                  setTime('');
                  callback && callback();
              }
          }, 1000);

          function setTime(time) {
              $("#timer").text(time);
          }
      }

      var scene = {
          context: null,

          width: sceneWidth,
          height: sceneHeight,

          board: {width: sceneBoardWidth, height: sceneBoardHeight},

          init: function () {
              scene.render();

              scene.update({
                  // Первый игрок
                  p1: {x: (scene.width / 2) - (scene.board.width / 2), y: (scene.height - (10 + 10))},
                  // Второй игрок
                  p2: {x: (scene.width / 2) - (scene.board.width / 2), y: 10},
                  // Мяч
                  b: {x: scene.width / 2, y: scene.height / 2}
              });

              scene.register();

              isInited = true;
          },
          render: function () {
              var canvas = document.createElement("canvas");

              canvas.width = scene.width;
              canvas.height = scene.height;

              document.getElementsByClassName('scene')[0].appendChild(canvas);

              scene.context = canvas.getContext('2d');
          },
          update: function (state) {
              // Закрашиваем сцену
              scene.context.fillStyle = "#000000";
              scene.context.fillRect(0, 0, scene.width, scene.height);

              // Доска 1 игрока
              scene.context.fillStyle = "#FFFFFF";
              scene.context.fillRect(state.p1.x, state.p1.y, scene.board.width, scene.board.height);

              // Доска 2 игрока
              scene.context.fillStyle = "#FFFFFF";
              scene.context.fillRect(state.p2.x, state.p2.y, scene.board.width, scene.board.height);

              // Мячик
              scene.context.beginPath();
              scene.context.arc(state.b.x, state.b.y, 5, 2 * Math.PI, false);
              scene.context.fillStyle = "#FFFFFF";
              scene.context.fill();
          },
          register: function() {
              window.addEventListener("keydown", function (event) {
                  if (!isStarted) {
                      return;
                  }

                  if (event.keyCode == 37) {
                      socket.emit('ls', gameId); // left start
                  }
                  if (event.keyCode == 39) {
                      socket.emit('rs', gameId); // right start
                  }
              });

              window.addEventListener("keyup", function (event) {
                  if (!isStarted) {
                      return;
                  }

                  if (event.keyCode == 37) {
                      socket.emit('le', gameId); // left end
                  }
                  if (event.keyCode == 39) {
                      socket.emit('re', gameId); // right end
                  }
              });
          }
      };

      window.onload = scene.init;

//      window.onbeforeunload = function () {
//          return false;//'Игра будет удалена';
//      };